---
import type { CollectionEntry } from "astro:content";
import type { IElement } from "@/data/shared";
import { getFormattedDate } from "@/utils";
import { getCollection } from "astro:content";

interface Props extends IElement {
	post: CollectionEntry<"post">;
	withDesc?: boolean;
}

const { post, as: Element = "div", withDesc = false } = Astro.props;
const date = new Date(post.data.publishDate);
const datetime = date.toISOString();
const postDate = getFormattedDate(date);

// Get the Spanish version if it exists
const allPosts = await getCollection("post");
const spanishPost = allPosts.find(p => p.slug === post.data.translationSlug);
---

<time datetime={datetime} class="min-w-[120px] text-gray-500">{postDate}</time>
<Element>
	<a href={`/posts/${post.slug}`} class="cactus-link" rel="prefetch">
		{post.data.title}
	</a>
	{spanishPost && (
		<span class="text-gray-500 ml-2">
			(<a href={`/posts/${spanishPost.slug}`} class="hover:underline" rel="prefetch">Spanish version</a>)
		</span>
	)}
</Element>
{withDesc && <q class="line-clamp-3 block italic">{post.data.description}</q>}
